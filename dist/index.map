{"version":3,"sources":["index.ts"],"names":[],"mappings":"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","file":"index.map","sourceRoot":"..","sourcesContent":["import { processFiles, processString } from \"typescript-formatter\"\nimport { Linter, Configuration } from \"tslint\"\nimport * as fs from \"fs-extra\"\nimport * as path from \"path\"\n\nconst tslint_fmt = async ( fileName: string, verbose: boolean = false, configFileName: string = \"tslint.json\" ) =>\n{\n    const fileContent = await fs.readFile( fileName, \"utf8\" )\n    const configuration = Configuration.findConfiguration( configFileName, fileName ).results\n    const tsLinter = new Linter( { fix: true } )\n    tsLinter.lint( fileName, fileContent, configuration )\n    verbose && console.info( tsLinter.getResult() )\n    const tsFmt = await processFiles(\n        [fileName],\n        {\n            verify: false,\n            replace: true,\n            verbose,\n            tsfmt: true,\n            editorconfig: true,\n            tsconfig: true,\n            vscode: true,\n            tslint: true,\n            tsconfigFile: \"tsconfig.json\",\n            tsfmtFile: \"tsfmt.json\",\n            tslintFile: \"tslint.json\",\n            vscodeFile: \".vscode/settings.json\"\n        } )\n    verbose && console.log( tsFmt[fileName] )\n}\n\nconst main = async () =>\n{\n    const args = process.argv.slice( 2 )\n    if ( args.length === 0 )\n    {\n        console.warn( \"Requires file argument to lint\" )\n        return\n    }\n\n    const filename = args[0]\n\n    const ext = path.extname( filename )\n    const isDir = ( await fs.lstat( filename ) ).isDirectory()\n\n    if ( ( ext !== \".ts\" && ext !== \".tsx\" ) || isDir )\n    {\n        console.warn( \"Must be .ts or .tsx file\" )\n        return\n    }\n    await tslint_fmt( filename )\n}\n\nmain()\n"]}